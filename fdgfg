import sys
from PyQt5.QtWidgets import (
    QApplication,
    QLabel,
    QLineEdit,
    QMainWindow,
    QPushButton,
    QVBoxLayout,
    QWidget,
)
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas


class MainWindow(QMainWindow):
    def plot_data(self):

        try:
            range_start = float(self.range_start_input.text())
            range_end = float(self.range_end_input.text())
        except ValueError:
            range_start = 0
            range_end = 1

        x = np.linspace(range_start, range_end, 50)
        try:
            expression = self.function_input.text()
        except ValueError:
            expression = "x**3"
        functions = {}  # определим словарь функций
        exec(f"def f(x): return {expression}", functions)
        function = functions["f"]
        y = [function(value) for value in x]
        plt.plot(x, y)
        plt.grid(True)
        plt.xlabel('x')
        plt.ylabel('y')
        plt.title('Заголовок графика ' + expression)
        # Обновление виджета №0 (виджет с полотном Matplotlib)
        self.centralWidget().layout().itemAt(0).widget().draw()

    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)
        self.setWindowTitle("График")
        self.canvas = FigureCanvas(plt.figure())
        central_widget = QWidget()
        layout = QVBoxLayout()
        central_widget.setLayout(layout)
        layout.addWidget(self.canvas)
        self.label_2 = QLabel1 ("Hide")
        self.label_2.move (100,150)
        self.lebel_2.setStyleSheet("border: 1px solid black;")
        self.label_2.clear()

        self.setCentralWidget(central_widget)
        self.plot_button = QPushButton("Нарисовать график")
        self.plot_button.clicked.connect(self.plot_data)
        layout.addWidget(self.plot_button)
        self.setCentralWidget(central_widget)

        self.range_label = QLabel("Диапазон:")
        self.range_start_input = QLineEdit('0')
        self.range_end_input = QLineEdit('1')
        layout.addWidget(self.range_label)
        layout.addWidget(self.range_start_input)
        layout.addWidget(self.range_end_input)
        self.function_label = QLabel("Функция:")
        self.function_input = QLineEdit('x**3')
        layout.addWidget(self.function_label)
        layout.addWidget(self.function_input)


# Создать приложение QApplication
app = QApplication([])
main_window = MainWindow()
main_window.show()
app.exec_()
